/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import database.DataAccessObject;
import gerenciarhorarios.Aula;
import gerenciarhorarios.Disciplina;
import gerenciarhorarios.Turma;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Rodrigo
 */
public class CadastrarTurma extends javax.swing.JInternalFrame {

    ArrayList<Disciplina> disciplinas = null; //Lista das disciplinas do banco de dados.
    ArrayList<Disciplina> disciplinasTurma = new ArrayList<>(); //Lista das disciplinas adicionadas à turma.

    DefaultListModel listModel = new DefaultListModel(); //Modelo para o JList.

    /**
     * Creates new form CadastrarTurma
     */
    public CadastrarTurma() {
        initComponents();
        
        jListDisciplinas.setModel(listModel);

        DataAccessObject.abrirConexao();
        disciplinas = DataAccessObject.getDisciplinas();

        for (int i = 0; i < disciplinas.size(); i++) {
            jComboBoxAdicionarDisciplinas.addItem(disciplinas.get(i).getNome() + " (Professor(a): "
                    + DataAccessObject.getProfessorByID(disciplinas.get(i).getIdProfessor()).getNome() + ")");
        }
        DataAccessObject.fecharConexao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNomeCurso = new javax.swing.JLabel();
        jTextFieldNomeCurso = new javax.swing.JTextField();
        jLabelNivelEnsino = new javax.swing.JLabel();
        jLabelNomeTurma = new javax.swing.JLabel();
        jLabelAnoTurma = new javax.swing.JLabel();
        jLabelTurnoTurma = new javax.swing.JLabel();
        jComboBoxAdicionarDisciplinas = new javax.swing.JComboBox<>();
        jLabelDisciplinasTurma = new javax.swing.JLabel();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListDisciplinas = new javax.swing.JList<>();
        jButtonConfirmar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBoxNivelEnsino = new javax.swing.JComboBox<>();
        jComboBoxNomeTurma = new javax.swing.JComboBox<>();
        jComboBoxAnoTurma = new javax.swing.JComboBox<>();
        jComboBoxTurnoTurma = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastrar turma");

        jLabelNomeCurso.setText("Nome do curso");

        jTextFieldNomeCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeCursoActionPerformed(evt);
            }
        });
        jTextFieldNomeCurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeCursoKeyPressed(evt);
            }
        });

        jLabelNivelEnsino.setText("Nível de ensino");

        jLabelNomeTurma.setText("Turma");

        jLabelAnoTurma.setText("Série/Semestre");

        jLabelTurnoTurma.setText("Turno da turma");

        jComboBoxAdicionarDisciplinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAdicionarDisciplinasActionPerformed(evt);
            }
        });

        jLabelDisciplinasTurma.setText("Disciplinas da turma");

        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jListDisciplinas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jListDisciplinas);

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jComboBoxNivelEnsino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fundamental", "Médio", "Superior" }));
        jComboBoxNivelEnsino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxNivelEnsinoKeyPressed(evt);
            }
        });

        jComboBoxNomeTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E", "F" }));
        jComboBoxNomeTurma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxNomeTurmaKeyPressed(evt);
            }
        });

        jComboBoxAnoTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jComboBoxAnoTurma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxAnoTurmaKeyPressed(evt);
            }
        });

        jComboBoxTurnoTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matutino", "Vespertino", "Noturno" }));
        jComboBoxTurnoTurma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxTurnoTurmaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBoxAdicionarDisciplinas, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(jButtonRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNivelEnsino)
                            .addComponent(jLabelNomeTurma)
                            .addComponent(jLabelAnoTurma)
                            .addComponent(jLabelTurnoTurma)
                            .addComponent(jLabelNomeCurso, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNomeCurso)
                            .addComponent(jComboBoxNivelEnsino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxNomeTurma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxAnoTurma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTurnoTurma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelDisciplinasTurma)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNomeCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNomeCurso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNivelEnsino)
                    .addComponent(jComboBoxNivelEnsino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomeTurma)
                    .addComponent(jComboBoxNomeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAnoTurma)
                    .addComponent(jComboBoxAnoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTurnoTurma)
                    .addComponent(jComboBoxTurnoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDisciplinasTurma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAdicionarDisciplinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAdicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRemover))
                .addGap(18, 18, 18)
                .addComponent(jButtonConfirmar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomeCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeCursoActionPerformed

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        DataAccessObject.abrirConexao();
        Disciplina disciplina = disciplinas.get(jComboBoxAdicionarDisciplinas.getSelectedIndex()); //Disciplina selecionada.
        disciplinasTurma.add(disciplina); //Adiciona a disciplina à lista.

        //Não adicionar se o item já tiver sido adicionado.
        for (int i = 0; i < listModel.size(); i++) {
            if (listModel.get(i).equals(disciplina.getNome() + " (Professor(a): "
                    + DataAccessObject.getProfessorByID(disciplina.getIdProfessor()).getNome() + ")")) {
                return;
            }
        }

        listModel.addElement(disciplina.getNome() + " (Professor(a): "
                + DataAccessObject.getProfessorByID(disciplina.getIdProfessor()).getNome() + ")");
        DataAccessObject.fecharConexao();
    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        disciplinasTurma.remove(jListDisciplinas.getSelectedIndex());
        listModel.remove(jListDisciplinas.getSelectedIndex());
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jComboBoxAdicionarDisciplinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAdicionarDisciplinasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAdicionarDisciplinasActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        String nomeCurso = jTextFieldNomeCurso.getText();
        String nivelEnsino = (String) jComboBoxNivelEnsino.getSelectedItem();
        String nomeTurma = (String) jComboBoxNomeTurma.getSelectedItem();
        int anoTurma = Integer.parseInt((String) jComboBoxAnoTurma.getSelectedItem());
        String turnoTurma = (String) jComboBoxTurnoTurma.getSelectedItem();

        nomeCurso = nomeCurso.trim().replaceAll("\\s+", " "); //Apagar os espaços em branco no início e final
        //da string, e tratar espaços duplicados no  meio da string.

        //Se o nível de ensino for superior, é obrigatório preencher o campo
        //nome do curso.
        if (nivelEnsino.equals("Superior") && nomeCurso.isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo 'Nome do curso' é obrigatório "
                    + "para o nível de ensino Superior", "Campo vazio",
                    JOptionPane.ERROR_MESSAGE);
            jTextFieldNomeCurso.requestFocus();
            return;
        }

        if (!nivelEnsino.equals("Superior")) {
            nomeCurso = "";
        }

        Turma turma = new Turma(nomeCurso, nivelEnsino, nomeTurma, anoTurma, turnoTurma);

        DataAccessObject.abrirConexao();
        //Verificar se a turma já existe.
        if (DataAccessObject.turmaExiste(turma.getCurso(), turma.getNivelEnsino(),
                turma.getNome(), turma.getAno(), turma.getTurno())) {
            JOptionPane.showMessageDialog(null, "A turma já existe. \nAltere o valor 'Turma' "
                    + "de " + turma.getNome() + " para o próximo valor.", "Turma já existe",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        DataAccessObject.insert(turma);

        JOptionPane.showMessageDialog(null, "Turma cadastrada com sucesso!");

        if (!disciplinasTurma.isEmpty()) {
            Aula aula = new Aula();
            Disciplina disciplina;

            //Capturar o ID da turma atual (a ser cadastrada).
            ArrayList<Turma> turmas;

            turmas = DataAccessObject.getTurmas(); //A turma aqui está ordenada por ordem crescente do nome.
            //Por isso é necessário buscar qual é o último ID, ele poderá não ser o último da lista.

            int id = turmas.get(0).getID(); //Inicialmente considera-se que o primeiro elemento é o que possui o último id.
            for (int i = 1; i < turmas.size(); i++) { //Começa a checar a partir do segundo elemento da lista.
                if (id < turmas.get(i).getID()) {
                    id = turmas.get(i).getID(); //Atualiza o valor do id.
                }
            }

            for (int i = 0; i < disciplinasTurma.size(); i++) {
                disciplina = disciplinasTurma.get(i);
                aula.setIDDisciplina(disciplina.getID());
                aula.setIDTurma(id);

                DataAccessObject.insert(aula); //Insere a aula no banco de dados.
            }

            JOptionPane.showMessageDialog(null, "Aulas adicionadas com sucesso!");
        }

        jTextFieldNomeCurso.requestFocus();

        DataAccessObject.fecharConexao();

        listModel.clear(); //Limpa o jList.
        disciplinasTurma.clear(); //Esvazia a lista.
        jTextFieldNomeCurso.setText("");
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    private void jTextFieldNomeCursoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeCursoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String nomeCurso = jTextFieldNomeCurso.getText();
            String nivelEnsino = (String) jComboBoxNivelEnsino.getSelectedItem();
            String nomeTurma = (String) jComboBoxNomeTurma.getSelectedItem();
            int anoTurma = Integer.parseInt((String) jComboBoxAnoTurma.getSelectedItem());
            String turnoTurma = (String) jComboBoxTurnoTurma.getSelectedItem();

            nomeCurso = nomeCurso.trim().replaceAll("\\s+", " "); //Apagar os espaços em branco no início e final
            //da string, e tratar espaços duplicados no  meio da string.

            //Se o nível de ensino for superior, é obrigatório preencher o campo
            //nome do curso.
            if (nivelEnsino.equals("Superior") && nomeCurso.isEmpty()) {
                JOptionPane.showMessageDialog(null, "O campo 'Nome do curso' é obrigatório "
                        + "para o nível de ensino Superior", "Campo Vazio",
                        JOptionPane.ERROR_MESSAGE);
                jTextFieldNomeCurso.requestFocus();
                return;
            }

            if (!nivelEnsino.equals("Superior")) {
                nomeCurso = "";
            }

            Turma turma = new Turma(nomeCurso, nivelEnsino, nomeTurma, anoTurma, turnoTurma);

            DataAccessObject.abrirConexao();
            //Verificar se a turma já existe.
            if (DataAccessObject.turmaExiste(turma.getCurso(), turma.getNivelEnsino(),
                    turma.getNome(), turma.getAno(), turma.getTurno())) {
                JOptionPane.showMessageDialog(null, "A turma já existe. \nAltere o valor 'Turma' "
                        + "de " + turma.getNome() + " para o próximo valor.", "Turma já existe",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            DataAccessObject.insert(turma);

            JOptionPane.showMessageDialog(null, "Turma cadastrada com sucesso!");

            if (!disciplinasTurma.isEmpty()) {
                Aula aula = new Aula();
                Disciplina disciplina;

                //Capturar o ID da turma atual (a ser cadastrada).
                ArrayList<Turma> turmas;
                turmas = DataAccessObject.getTurmas(); //A turma aqui está ordenada por ordem crescente do nome.
                //Por isso é necessário buscar qual é o último ID, ele poderá não ser o último da lista.

                int id = turmas.get(0).getID(); //Inicialmente considera-se que o primeiro elemento é o que possui o último id.
                for (int i = 1; i < turmas.size(); i++) { //Começa a checar a partir do segundo elemento da lista.
                    if (id < turmas.get(i).getID()) {
                        id = turmas.get(i).getID(); //Atualiza o valor do id.
                    }
                }

                for (int i = 0; i < disciplinasTurma.size(); i++) {
                    disciplina = disciplinasTurma.get(i);
                    aula.setIDDisciplina(disciplina.getID());
                    aula.setIDTurma(id);

                    DataAccessObject.insert(aula); //Insere a aula no banco de dados.
                }

                JOptionPane.showMessageDialog(null, "Aulas adicionadas com sucesso!");
            }

            jTextFieldNomeCurso.requestFocus();

            DataAccessObject.fecharConexao();

            listModel.clear(); //Limpa o jList.
            disciplinasTurma.clear(); //Esvazia a lista.
            jTextFieldNomeCurso.setText("");
        }
    }//GEN-LAST:event_jTextFieldNomeCursoKeyPressed

    private void jComboBoxNivelEnsinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxNivelEnsinoKeyPressed

    }//GEN-LAST:event_jComboBoxNivelEnsinoKeyPressed

    private void jComboBoxNomeTurmaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxNomeTurmaKeyPressed

    }//GEN-LAST:event_jComboBoxNomeTurmaKeyPressed

    private void jComboBoxAnoTurmaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxAnoTurmaKeyPressed

    }//GEN-LAST:event_jComboBoxAnoTurmaKeyPressed

    private void jComboBoxTurnoTurmaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxTurnoTurmaKeyPressed

    }//GEN-LAST:event_jComboBoxTurnoTurmaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JComboBox<String> jComboBoxAdicionarDisciplinas;
    private javax.swing.JComboBox<String> jComboBoxAnoTurma;
    private javax.swing.JComboBox<String> jComboBoxNivelEnsino;
    private javax.swing.JComboBox<String> jComboBoxNomeTurma;
    private javax.swing.JComboBox<String> jComboBoxTurnoTurma;
    private javax.swing.JLabel jLabelAnoTurma;
    private javax.swing.JLabel jLabelDisciplinasTurma;
    private javax.swing.JLabel jLabelNivelEnsino;
    private javax.swing.JLabel jLabelNomeCurso;
    private javax.swing.JLabel jLabelNomeTurma;
    private javax.swing.JLabel jLabelTurnoTurma;
    private javax.swing.JList<String> jListDisciplinas;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldNomeCurso;
    // End of variables declaration//GEN-END:variables
}
