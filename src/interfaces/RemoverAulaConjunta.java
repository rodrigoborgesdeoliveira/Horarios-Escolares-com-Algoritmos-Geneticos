/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import database.DataAccessObject;
import gerenciarhorarios.Aula;
import gerenciarhorarios.Disciplina;
import gerenciarhorarios.Turma;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Rodrigo
 */
public class RemoverAulaConjunta extends javax.swing.JInternalFrame {

    //Variáveis para controle de turma.
    ArrayList<Turma> turmas = new ArrayList<>();
    Turma turma = null;

    //Variáveis para controle de disciplina.
    ArrayList<Disciplina> disciplinas = new ArrayList<>();

    /**
     * Creates new form RemoverAulaConjunta
     */
    public RemoverAulaConjunta() {
        initComponents();

        ArrayList<Aula> aulas = DataAccessObject.getAulas();

        for (int i = 0; i < aulas.size(); i++) {
            if (aulas.get(i).getIDTurmaConjunta() != 0) {
                //Possui turma conjunta.
                turmas.add(DataAccessObject.getTurmaByID(aulas.get(i).getIDTurma()));
            }
        }

        //Adicionar as turmas ao jComboBox.
        for (int i = 0; i < turmas.size(); i++) {
            if (turmas.get(i).getNivelEnsino().equals("Superior")) {
                jComboBoxTurma.addItem("Curso: " + turmas.get(i).getCurso() + " | Nível de ensino: "
                        + turmas.get(i).getNivelEnsino() + " | Turma: " + turmas.get(i).getNome()
                        + " | Semestre: " + turmas.get(i).getAno() + " | Turno: " + turmas.get(i).getTurno());
            } else {
                jComboBoxTurma.addItem("Nível de ensino: "
                        + turmas.get(i).getNivelEnsino() + " | Turma: " + turmas.get(i).getNome()
                        + " | Série: " + turmas.get(i).getAno() + " | Turno: " + turmas.get(i).getTurno());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTurma = new javax.swing.JLabel();
        jComboBoxTurma = new javax.swing.JComboBox<>();
        jButtonSelecionarTurma = new javax.swing.JButton();
        jLabelDisciplina = new javax.swing.JLabel();
        jComboBoxDisciplina = new javax.swing.JComboBox<>();
        jButtonConfirmar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Remover aula conjunta");

        jLabelTurma.setText("Turma");

        jButtonSelecionarTurma.setText("Selecionar");
        jButtonSelecionarTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarTurmaActionPerformed(evt);
            }
        });

        jLabelDisciplina.setText("Disciplina");

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelDisciplina)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTurma)
                                .addGap(23, 23, 23)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxTurma, 0, 437, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSelecionarTurma))
                            .addComponent(jComboBoxDisciplina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTurma)
                    .addComponent(jComboBoxTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelecionarTurma))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDisciplina)
                    .addComponent(jComboBoxDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonConfirmar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelecionarTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarTurmaActionPerformed
        DataAccessObject.abrirConexao();

        turma = turmas.get(jComboBoxTurma.getSelectedIndex()); //Turma selecionada.
        ArrayList<Aula> aulas = DataAccessObject.getAulasByIDTurma(turma.getID()); //Aulas que contém essa turma.

        jComboBoxDisciplina.removeAllItems(); //Limpa o jComboBox.
        disciplinas.clear(); //Limpar as disciplinas.

        //Adicionar as disciplinas das aulas ao array list.
        for (int i = 0; i < aulas.size(); i++) {
            if (aulas.get(i).getIDTurmaConjunta() != 0) {
                //Possui turma conjunta para essa disciplina,
                //fornecer como opção.
                Disciplina disciplina = DataAccessObject.getDisciplinaByID(aulas.get(i).getIDDisciplina());
                Turma turmaConjunta = DataAccessObject.getTurmaByID(aulas.get(i).getIDTurmaConjunta());
                disciplinas.add(disciplina);

                if (turmaConjunta.getNivelEnsino().equals("Superior")) {
                    //Nível superior.
                    jComboBoxDisciplina.addItem(disciplina.getNome() + " (Professor(a): "
                            + DataAccessObject.getProfessorByID(disciplina.getIdProfessor()).getNome() + ")"
                            + " | Turma conjunta: " + turmaConjunta.getNome() + " | Curso: "
                            + turmaConjunta.getCurso() + " | Semestre: " + turmaConjunta.getAno());
                } else {
                    //Nível fundamental ou médio.
                    jComboBoxDisciplina.addItem(disciplina.getNome() + " (Professor(a): "
                            + DataAccessObject.getProfessorByID(disciplina.getIdProfessor()).getNome() + ")"
                            + " | Turma conjunta: " + turmaConjunta.getNome() 
                            + " | Série: " + turmaConjunta.getAno());
                }
            }
        }

        DataAccessObject.fecharConexao();
    }//GEN-LAST:event_jButtonSelecionarTurmaActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        if(turma == null){
            JOptionPane.showMessageDialog(null, "Por favor, selecione uma turma primeiro.",
                    "Nenhuma turma selecionada", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DataAccessObject.abrirConexao();
        
        Aula aula = new Aula();
        aula.setIDDisciplina(disciplinas.get(jComboBoxDisciplina.getSelectedIndex()).getID());
        aula.setIDTurma(turma.getID());
        aula.setIDTurmaConjunta(0); //Dizer que não possui turma conjunta.

        DataAccessObject.update(aula);

        JOptionPane.showMessageDialog(null, "Aula conjunta removida com sucesso!");

        jComboBoxDisciplina.removeAllItems();
        disciplinas.clear();
        
        DataAccessObject.fecharConexao();
    }//GEN-LAST:event_jButtonConfirmarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonSelecionarTurma;
    private javax.swing.JComboBox<String> jComboBoxDisciplina;
    private javax.swing.JComboBox<String> jComboBoxTurma;
    private javax.swing.JLabel jLabelDisciplina;
    private javax.swing.JLabel jLabelTurma;
    // End of variables declaration//GEN-END:variables
}
