/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import database.DataAccessObject;
import gerenciarhorarios.Aula;
import gerenciarhorarios.Turma;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rodrigo
 */
public class ExibirHorario extends javax.swing.JInternalFrame {
    ArrayList<Turma> turmasGeral = new ArrayList<>();
    ArrayList<Turma> turmas = new ArrayList<>();
    Turma turma = null;
    
    DefaultListModel listModel = new DefaultListModel(); //Modelo para o JList.
    
    /**
     * Creates new form ExibirHorario
     */
    public ExibirHorario() {
        initComponents();
        
        turmasGeral = DataAccessObject.getTurmas();
        jListProfessores.setModel(listModel);
        
        for (int i = 0; i < turmasGeral.size(); i++) {
            if(DataAccessObject.turmaTemHorario(turmasGeral.get(i).getID())){
                //Possui horário, exibir essa turma como uma opção.
                turmas.add(turmasGeral.get(i));
            }
        }
        
        if(turmas.isEmpty()){
            //Nenhuma turma possui um horário ainda.
            JOptionPane.showMessageDialog(null, "Nenhum horário cadastrado!");
        }

        //Adicionar as turmas ao jComboBox.
        for (int i = 0; i < turmas.size(); i++) {
            if (turmas.get(i).getNivelEnsino().equals("Superior")) {
                jComboBoxTurmas.addItem("Curso: " + turmas.get(i).getCurso() + " | Nível de ensino: "
                        + turmas.get(i).getNivelEnsino() + " | Turma: " + turmas.get(i).getNome()
                        + " | Série/Semestre: " + turmas.get(i).getAno() + " | Turno: " + turmas.get(i).getTurno());
            } else{
                jComboBoxTurmas.addItem("Nível de ensino: "
                        + turmas.get(i).getNivelEnsino() + " | Turma: " + turmas.get(i).getNome()
                        + " | Série/Semestre: " + turmas.get(i).getAno() + " | Turno: " + turmas.get(i).getTurno());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTurma = new javax.swing.JLabel();
        jComboBoxTurmas = new javax.swing.JComboBox<>();
        jButtonSelecionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHorario = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListProfessores = new javax.swing.JList<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Exibir horário");

        jLabelTurma.setText("Turma");

        jButtonSelecionar.setText("Selecionar");
        jButtonSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarActionPerformed(evt);
            }
        });

        jTableHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableHorario);

        jScrollPane2.setViewportView(jListProfessores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabelTurma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTurmas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSelecionar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTurma)
                    .addComponent(jComboBoxTurmas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelecionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarActionPerformed
        DataAccessObject.abrirConexao();
        
        //Limpar o conteúdo da tabela.
        DefaultTableModel modelo = (DefaultTableModel) jTableHorario.getModel();
        for (int i = 0; i < 6; i++) { //Colunas da tabela.
            for (int j = 0; j < 6; j++) { //Linhas da tabela.
                modelo.setValueAt("", j, i);
            }
        }
        
        listModel.clear(); //Limpar o jList.
        
        turma = turmas.get(jComboBoxTurmas.getSelectedIndex()); //Turma selecionada.
        
        turma = DataAccessObject.getHorarioTurma(turma.getID()); //Buscar horário no banco de dados.
        
        //Adicionar disciplinas à tabela.
        int posicaoHorario = 0; //Contador da posição no horário.
        if (turma.getHorarioTurma().length == 36) { //Matutino ou vespertino.
            for (int i = 0; i < 6; i++) { //Colunas da tabela.
                for (int j = 0; j < 6; j++) { //Linhas da tabela.
                    if (turma.getHorarioTurma()[posicaoHorario] != 0) {
                        modelo.setValueAt(DataAccessObject.getDisciplinaByID(
                                turma.getHorarioTurma()[posicaoHorario]).getNome(), j, i);
                    }
                    posicaoHorario++;
                }
            }
        } else { //Noturno
            for (int i = 0; i < 6; i++) { //Colunas da tabela.
                for (int j = 0; j < 4; j++) { //Linhas da tabela.
                    if (turma.getHorarioTurma()[posicaoHorario] != 0) {
                        modelo.setValueAt(DataAccessObject.getDisciplinaByID(
                                turma.getHorarioTurma()[posicaoHorario]).getNome(), j, i);
                    }
                    posicaoHorario++;
                }
            }
        }
        
        //Adicionar a relação de professores que lecionam as disciplinas ao jList.
        ArrayList<Aula> aulas = DataAccessObject.getAulasByIDTurma(turma.getID());
        for (int i = 0; i < aulas.size(); i++) {
            listModel.addElement("Disciplina: " + DataAccessObject.
                    getDisciplinaByID(aulas.get(i).getIDDisciplina()).getNome()
            + " | Professor(a): " + DataAccessObject.getProfessorByID(DataAccessObject.
                    getDisciplinaByID(aulas.get(i).getIDDisciplina()).getIdProfessor()).getNome());
        }
        
         DataAccessObject.fecharConexao();
    }//GEN-LAST:event_jButtonSelecionarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSelecionar;
    private javax.swing.JComboBox<String> jComboBoxTurmas;
    private javax.swing.JLabel jLabelTurma;
    private javax.swing.JList<String> jListProfessores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableHorario;
    // End of variables declaration//GEN-END:variables
}
